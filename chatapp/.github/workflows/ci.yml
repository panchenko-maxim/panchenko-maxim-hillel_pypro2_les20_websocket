name: CI/CD Pipline

on:
    push:
        branches:
            -main
    pull_request:
        branches:
            -main

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            - name: Install dependencies
              run:
                  python -m pip install --upgrade pip
                  pip install fake8

            - name: Run fake8
              run: flake8 chat/ chatapp/ --exclude=migrations --max-lint-length=120

    test:
        runs-on: : ubuntu-latest
        services:
            redis:
                image: redis:latest
                ports:
                    - 6379:6379
        steps:
            - name: Checkout code
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            - name: Install dependencies
              run:
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Run migrations
              run: python manage.py migrate
              env:
                  DJANGO_SETTINGS_MODULE:
                      chatapp.settings

            - name: Run tests
              run: python manage.py test chat
              env:
                  DJANGO_SETTINGS_MODULE:
                      chatapp.settings

    security:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            - name: Install Bandit
              run:
                  python -m pip install --upgrade pip
                  pip install bandit

            - name: Run Bandit
              run:
                  bandit -r chat/ chatapp/ -f txt -o security_report.txt

            - name: Upload security report
              uses: actions/upload-artifact@v3
              with:
                  name: security-report
                  path: security_report.txt
                  retention-days: 7

    coverage:
        runs-on: : ubuntu-latest
        services:
            redis:
                image: redis:latest
                ports:
                    - 6379:6379
        steps:
            - name: Checkout code
              uses: actions/setup-python@v4
              with:
                  python-version: '3.11'

            - name: Install dependencies
              run:
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Run migrations
              run: python manage.py migrate
              env:
                  DJANGO_SETTINGS_MODULE:
                      chatapp.settings

            - name: Run tests with coverage
              run: coverage run --source=chat.chatapp manage.py test chat
                   coverage report
                   coverage html -d coverage_report
              env:
                  DJANGO_SETTINGS_MODULE:
                      chatapp.settings

            - name: Upload coverage report
              uses: actions/upload-artifact
              with:
                  name: coverage-report
                  path: coverag_report/
                  retention-days: 7

    deploy:
      runs-on: ubuntu-latest
      needs: [lint, test, security, coverage]
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      steps:
        - name: Checkout code
          uses: actions/checkout

        - name: Set uo Docker Buildbox
          uses: docker/setup-buildbox-action@v2

        - name: Login to Dockerhub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_PASSWORD }}

        - name: Build and ush Docker image
          uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags:
              username: ${{ secrets.DOCKER_HUB_USERNAME }}/chatapp:${{ github.sha }}
                        ${{ secrets.DOCKER_HUB_PASSWORD }}/chatapp:latest
              build-args:
                BUILD_VERSION=${{ github.sha }}



